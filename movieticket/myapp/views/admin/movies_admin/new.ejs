<%- include('../../partials/header', { title: 'New Movie', user }) %>
<%- include('../../partials/message') %>

<style>
  /* Tiny chip UI (shared with edit.ejs) */
  .chip {
    display:inline-flex; align-items:center; gap:.5rem;
    padding:.25rem .5rem; border:1px solid var(--bs-border-color);
    border-radius:999px; background:rgba(255,255,255,.05);
  }
  .chip .remove { cursor:pointer; opacity:.8; }
  .chip .remove:hover { opacity:1; }
  /* keep dropdown above siblings */
  #genre-menu.show { display:block; max-height:260px; overflow:auto; }
</style>

<div class="container py-4">
  <a href="/admin/movies" class="btn btn-primary btn-sm">&larr; Back to movies</a>

  <h1 class="h3 mb-4">New Movie</h1>

  <form method="post" action="/admin/movies" enctype="multipart/form-data" class="row g-4">
    <div class="col-md-8">

      <div class="mb-3">
        <label class="form-label">Title</label>
        <input name="title" class="form-control" required placeholder="Title">
      </div>

      <div class="row g-3">
        <div class="col-md-4">
          <label class="form-label">Duration (minutes)</label>
          <input name="duration_min" type="number" min="0" class="form-control" placeholder="e.g., 110">
        </div>
        <div class="col-md-4">
          <label class="form-label">Rating</label>
          <input name="rating" class="form-control" placeholder="e.g., G / PG-13 / 18+">
        </div>
        <div class="col-md-4">
          <label class="form-label">Release date</label>
          <input name="release_date" type="date" class="form-control">
        </div>
      </div>

      <div class="mb-3">
        <label class="form-label">Trailer URL</label>
        <input name="trailer_url" type="url" class="form-control" placeholder="https://youtube.com/watch?v=...">
      </div>

      <div class="mb-3">
        <label class="form-label">Description</label>
        <textarea name="description" rows="5" class="form-control" placeholder="Short synopsis that will appear on the detail page..."></textarea>
      </div>

      <!-- Genres (searchable dropdown + chips; same as edit.ejs) -->
      <div class="mb-3" id="genre-picker">
        <label class="form-label d-flex align-items-center gap-2">
          Genres
          <a class="small" href="/admin/genres">manage genres</a>
        </label>

        <!-- Selected chips -->
        <div id="genre-chips" class="d-flex flex-wrap gap-2 mb-2"></div>
        <!-- Hidden inputs submitted -->
        <div id="genre-hidden"></div>

        <div class="position-relative">
          <input id="genre-search" type="text" class="form-control" autocomplete="off"
                 placeholder="Type to search & add genresâ€¦" aria-expanded="false" aria-controls="genre-menu" />
          <div id="genre-menu" class="dropdown-menu w-100"></div>
        </div>
      </div>

      <div class="mt-4">
        <button class="btn btn-primary px-4">Create Movie</button>
      </div>
    </div>

    <div class="col-md-4">
      <div class="mb-3">
        <label class="form-label">Poster image (upload)</label>
        <input class="form-control" type="file" name="poster" id="posterFile" accept="image/*">
      </div>

      <div class="mb-3">
        <label class="form-label">or Poster URL</label>
        <input class="form-control" name="poster_url" id="posterUrl" placeholder="posters/file.jpg or https://...">
      </div>

      <!-- Preview (hidden until a file/URL is provided) -->
      <div class="card d-none" id="posterPreviewCard">
        <div class="card-header py-2">Preview</div>
        <div class="card-body text-center">
          <img id="posterPreview" alt="poster" class="img-fluid rounded">
        </div>
      </div>
    </div>
  </form>
</div>

<script>
/* ---------- genre picker (same as edit.ejs) ---------- */
(() => {
  // data from server
  const ALL_GENRES = <%- JSON.stringify((genres || []).map(g => ({ id: g.id, name: g.name }))) %>;
  // on "new" we typically have none preselected; allow controller to pass selectedGenreIds if you want defaults
  const PRESELECTED = <%- JSON.stringify(typeof selectedGenreIds !== 'undefined' ? selectedGenreIds : []) %>;

  // elements
  const chipsEl  = document.getElementById('genre-chips');
  const hiddenEl = document.getElementById('genre-hidden');
  const searchEl = document.getElementById('genre-search');
  const menuEl   = document.getElementById('genre-menu');

  // state
  const selected = new Map(); // id -> {id,name}
  PRESELECTED.forEach(id => {
    const g = ALL_GENRES.find(x => x.id === id);
    if (g) selected.set(g.id, g);
  });

  // render
  function renderChips(){
    chipsEl.innerHTML = '';
    hiddenEl.innerHTML = '';
    if (selected.size === 0) {
      chipsEl.insertAdjacentHTML('beforeend', '<span class="text-secondary small">No genres selected</span>');
    } else {
      [...selected.values()].forEach(g => {
        chipsEl.insertAdjacentHTML('beforeend', `
          <span class="chip">
            <span>${escapeHtml(g.name)}</span>
            <span class="remove text-danger" data-id="${g.id}" aria-label="Remove ${escapeHtml(g.name)}">&times;</span>
          </span>
        `);
        hiddenEl.insertAdjacentHTML('beforeend', `<input type="hidden" name="genre_ids[]" value="${g.id}">`);
      });
    }
  }
  function renderMenu(query=''){
    const q = query.trim().toLowerCase();
    let list = ALL_GENRES.filter(g => !selected.has(g.id));
    if (q) list = list.filter(g => g.name.toLowerCase().includes(q));
    menuEl.innerHTML = '';
    if (list.length === 0){
      menuEl.insertAdjacentHTML('beforeend', `<div class="dropdown-item text-muted small">No matches</div>`);
    } else {
      list.slice(0,12).forEach(g => {
        menuEl.insertAdjacentHTML('beforeend', `<button type="button" class="dropdown-item" data-id="${g.id}">${escapeHtml(g.name)}</button>`);
      });
    }
  }
  function openMenu(){ renderMenu(searchEl.value); menuEl.classList.add('show'); searchEl.setAttribute('aria-expanded','true'); }
  function closeMenu(){ menuEl.classList.remove('show'); searchEl.setAttribute('aria-expanded','false'); }
  function addById(id){
    const g = ALL_GENRES.find(x => x.id === Number(id));
    if (!g || selected.has(g.id)) return;
    selected.set(g.id, g);
    searchEl.value = '';
    renderChips(); closeMenu();
  }
  function removeById(id){ selected.delete(Number(id)); renderChips(); }
  function escapeHtml(s){ return String(s).replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])); }

  // events
  searchEl.addEventListener('focus', openMenu);
  searchEl.addEventListener('input', () => { if(!menuEl.classList.contains('show')) openMenu(); renderMenu(searchEl.value); });
  searchEl.addEventListener('keydown', e => {
    if (e.key === 'Enter'){ e.preventDefault(); const first = menuEl.querySelector('[data-id]'); if (first) addById(first.dataset.id); }
    else if (e.key === 'Escape'){ closeMenu(); }
  });
  menuEl.addEventListener('click', e => { const btn = e.target.closest('[data-id]'); if (!btn) return; addById(btn.dataset.id); });
  chipsEl.addEventListener('click', e => { const x = e.target.closest('.remove'); if (!x) return; removeById(x.dataset.id); });
  document.addEventListener('click', e => { if (!document.getElementById('genre-picker').contains(e.target)) closeMenu(); });

  renderChips();
})();
</script>

<script>
/* ---------- poster preview (unchanged) ---------- */
(() => {
  const fileInput = document.getElementById('posterFile');
  const urlInput  = document.getElementById('posterUrl');
  const card      = document.getElementById('posterPreviewCard');
  const img       = document.getElementById('posterPreview');

  function show(src){
    if (!src){ img.removeAttribute('src'); card.classList.add('d-none'); return; }
    img.src = src; card.classList.remove('d-none');
  }
  fileInput?.addEventListener('change', () => {
    const f = fileInput.files?.[0]; if (f) show(URL.createObjectURL(f));
  });
  urlInput?.addEventListener('input', () => {
    const v = urlInput.value.trim(); if (!v) return show('');
    const src = v.startsWith('http') ? v : '/images/' + v.replace(/^\/+/, '');
    show(src);
  });
})();
</script>

<%- include('../../partials/footer') %>
