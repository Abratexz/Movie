<%- include('../../partials/header', { title, user }) %>

<style scoped>
  :root {
    --bg:#0c0c0d; --card:#fff; --muted:#666; --line:#e9e9ee;
    --pill:#e9f5ff; --pill-text:#0a66c2; --ok:#e8fff1; --ok-text:#0f8a3c;
    --warn:#fff7e6; --warn-text:#a86700; --bad:#ffefef; --bad-text:#b42318;
  }
  *{box-sizing:border-box}
  body{font-family:system-ui,Arial,sans-serif;background:var(--bg);margin:0;padding:0}
  h1{margin:0 0 12px;text-align:left;color:#fff}

  .grid{ display:grid; gap:14px; grid-template-columns:1fr; }
  .grid.with-timeline{ position:relative; padding-left:32px; counter-reset: row; }
  .grid.with-timeline::before{ content:""; position:absolute; left:14px; top:0; bottom:0; width:2px; background:#262626; opacity:.5; border-radius:2px; }
  .grid.with-timeline .card{ position:relative; }
  .grid.with-timeline .card::before{
    content: counter(row); counter-increment: row;
    position:absolute; left:-26px; top:12px; width:22px; height:22px; border-radius:50%;
    background:#111; color:#fff; display:flex; align-items:center; justify-content:center;
    font-size:12px; border:1px solid #303030;
  }
  @media (max-width:560px){ .grid.with-timeline{ padding-left:0 } .grid.with-timeline::before, .grid.with-timeline .card::before{ display:none } }

  /* --- compact card (same structure, just smaller) --- */
  .card{
    background:var(--card); border-radius:12px; overflow:visible;
    box-shadow:0 8px 24px rgba(0,0,0,.06); border:1px solid var(--line);
    display:flex; flex-direction:row; transition:transform .15s ease; min-height:120px;
  }
  .card:hover{ transform: translateY(-1px) }
  .poster{
    width:200px; object-fit:cover; background:#ddd; flex-shrink:0;
    border-top-left-radius:12px; border-bottom-left-radius:12px;
  }
  .content{ padding:12px; flex:1; display:flex; flex-direction:column }
  .title{ margin:0 0 4px; font-size:16px; line-height:1.25 }
  .row{ display:flex; gap:6px; align-items:center; margin:6px 0 }
  .tag{
    font-size:11px; border-radius:999px; padding:2px 8px; display:inline-block;
    background:var(--pill); color:var(--pill-text); border:1px solid #d7ecff; font-weight:600;
  }
  .status{ font-weight:700 }
  .status.paid{ background:var(--ok); color:var(--ok-text); border:1px solid #c6f0d7 }
  .status.hold, .status.pending_payment, .status.created{ background:var(--warn); color:var(--warn-text); border:1px solid #ffe1b5 }
  .status.cancelled, .status.canceled, .status.expired, .status.failed{ background:var(--bad); color:var(--bad-text); border:1px solid #ffd2d2 }

  .meta{ display:grid; grid-template-columns:repeat(auto-fit,minmax(120px,1fr)); gap:6px; margin-top:4px }
  .label{ font-size:11px; color:#444 }
  .value{ font-size:13px }

  .footer{
    margin-top:auto; display:flex; justify-content:space-between; align-items:center; gap:8px;
    border-top:1px solid var(--line); padding-top:8px
  }
  .price{ font-weight:700; font-size:16px }

  .btn{ appearance:none; border:1px solid #d6d7de; background:#fff; padding:6px 10px;
        border-radius:8px; cursor:pointer; font-size:12px; }
  .btn:not(.btn-danger):hover{ background:#f8f9fb }

  /* keep Pay red always */
  .btn.btn-danger,
  .btn.btn-danger:hover,
  .btn.btn-danger:focus,
  .btn.btn-danger:active,
  .btn.btn-danger:visited {
    background:#dc3545 !important; border-color:#dc3545 !important; color:#fff !important; box-shadow:none !important;
  }

  .countdown{ font-variant-numeric: tabular-nums; font-size:13px }
  .progress { height:5px; background:#f1f3f5; }
  .progress-bar{ background:#dc3545 }
</style>

<%
  function uc(s){ return (s||'').toUpperCase(); }
  function statusClass(s){
    s = (s||'').toLowerCase();
    if (s==='paid') return 'paid';
    if (s==='hold' || s==='pending_payment' || s==='created') return s;
    if (['cancelled','canceled','expired','failed'].includes(s)) return s;
    return 'canceled';
  }
%>

<div class="container py-3">
  <div class="d-flex align-items-center justify-content-between mb-2">
    <h1 class="h5 mb-0 fw-bold">Tickets of <%= person.name %> <small class="fw-medium">(<%= person.email %>)</small></h1>
    <a class="btn btn-sm" href="/admin/tickets">Back</a>
  </div>

  <div class="grid with-timeline">
    <% if (tickets && tickets.length) { %>
      <% tickets.forEach(t => { const st=(t.status||'').toLowerCase(); %>
        <article class="card ticket-card">
          <img class="poster"
               src="/images/<%= t.poster_url || 'posters/default.jpg' %>"
               alt="<%= t.movie_title %>"
               onerror="this.src='/images/posters/default.jpg';"/>

          <div class="content">
            <h2 class="title fw-medium"><%= t.movie_title %></h2>

            <div class="row">
              <span class="tag "><%= t.theater_name %><% if (t.city){ %> • <%= t.city %><% } %></span>
              <span class="tag status <%= statusClass(st) %> "><%= uc(st) %></span>
              <span class="tag ">Order ID: #<%= t.order_id %></span>
            </div>

            <div class="meta">
              <div>
                <div class="label fw-medium"><i class="fa-solid fa-calendar-days me-1"></i> Start</div>
                <div class="value fw-medium"><%= t.start_local || t.start_utc %></div>
              </div>
              <div>
                <div class="label fw-medium"><i class="fa-solid fa-chair me-1"></i> Seats</div>
                <div class="value fw-medium"><%= (t.seats && t.seats.length) ? t.seats.join(', ') : '—' %></div>
              </div>
              <div>
                <div class="label fw-medium"><i class="fa-solid fa-clock me-1"></i> Duration</div>
                <div class="value fw-medium"><%= t.duration_min ?? '—' %> min</div>
              </div>
              <div>
                <div class="label fw-medium"><i class="fa-solid fa-receipt me-1"></i> Amount</div>
                <div class="value fw-medium">฿<%= t.total_amount %></div>
              </div>
            </div>

            <div class="footer">
              <div class="price fw-medium">฿<%= t.total_amount %></div>
              <div class="text-end">
                <% if (st === 'hold') { %>
                  <div class="small text-muted js-timeleft-label mb-1">Time left to pay</div>
                  <div class="text-danger countdown" data-seconds="<%= t.remaining_seconds || 0 %>" data-order-id="<%= t.order_id %>">--:--</div>
                  <div class="progress my-2">
                    <div class="progress-bar" role="progressbar" style="width:0%" data-total="600" aria-valuemin="0" aria-valuemax="600"></div>
                  </div>
                  <div class="d-flex gap-2 justify-content-end">
                    <a class="btn btn-danger btn-sm" href="/payment?order_id=<%= t.order_id %>">
                      <i class="fa-solid fa-credit-card me-1"></i> Pay
                    </a>
                    <form method="post" action="/orders/<%= t.order_id %>/cancel" onsubmit="return confirm('Cancel this order and release seats?');">
                      <button class="btn btn-sm" type="submit">Cancel</button>
                    </form>
                  </div>
                <% } else if (st === 'paid') { %>
                  <div class="d-flex gap-2">
                    <button class="btn btn-sm" onclick="window.print()">Print</button>
                  </div>
                <% } else { %>
                  <div></div>
                <% } %>
              </div>
            </div>
          </div>
        </article>
      <% }) %>
    <% } else { %>
      <p style="grid-column:1/-1; text-align:center; color:#ccc;">No tickets</p>
    <% } %>
  </div>
</div>

<script>
(function(){
  function fmt(sec){ sec = Math.max(0, sec|0); const m=Math.floor(sec/60), s=sec%60; return String(m).padStart(2,'0')+':'+String(s).padStart(2,'0'); }
  document.querySelectorAll('.countdown').forEach(n=>{
    const card = n.closest('.ticket-card');
    const bar  = card.querySelector('.progress-bar');
    const total = Number(bar?.dataset.total || 600);
    let sec = Number(n.dataset.seconds||0);

    n.textContent = fmt(sec);
    if (bar) bar.style.width = (100*(sec/total))+'%';

    const iv = setInterval(async ()=>{
      sec--; n.textContent = fmt(sec);
      if (bar) bar.style.width = (100*(Math.max(0,sec)/total))+'%';
      if (sec <= 0){
        clearInterval(iv);
        try{
          const id = n.dataset.orderId;
          const r = await fetch(`/api/orders/${id}`, { headers:{'X-Requested-With':'XMLHttpRequest'} });
          if (r.ok){
            const d = await r.json();
            if (d.ok && d.order){
              const st = (d.order.status||'').toLowerCase();
              const badge = card.querySelector('.status');
              if (badge){
                badge.textContent = (d.order.status||'').toUpperCase();
                badge.className = 'tag status ' + st;
              }
            }
          }
        }catch(_){}
        card.querySelector('.js-timeleft-label')?.remove();
        card.querySelector('.progress')?.remove();
        n.remove();
        card.querySelector('a.btn.btn-danger')?.remove();
        card.querySelector('form[action$="/cancel"]')?.remove();
      }
    }, 1000);
  });

  document.addEventListener('submit', async (e)=>{
    const f = e.target.closest('form[action$="/cancel"]'); if(!f) return;
    e.preventDefault();
    if(!confirm('Cancel this order and release seats?')) return;
    try{
      const r = await fetch(f.action, { method:'POST', headers:{'X-Requested-With':'XMLHttpRequest'} });
      const d = await r.json();
      if(!d.ok) throw new Error(d.error||'Cancel failed');
      const card = f.closest('.ticket-card');
      const badge = card.querySelector('.status');
      if (badge){ badge.textContent='CANCELLED'; badge.className='tag status cancelled'; }
      card.querySelector('.js-timeleft-label')?.remove();
      card.querySelector('.countdown')?.remove();
      card.querySelector('.progress')?.remove();
      card.querySelector('a.btn.btn-danger')?.remove();
      f.remove();
    }catch(err){ alert('Could not cancel. Please refresh.'); }
  });
})();
</script>

<%- include('../../partials/footer') %>
